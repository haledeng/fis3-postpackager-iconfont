{
  "name": "svgpath",
  "version": "2.0.0",
  "description": "SVG path operations library",
  "keywords": [
    "svg",
    "path",
    "transform",
    "scale",
    "translate",
    "rotate",
    "matrix"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/fontello/svgpath"
  },
  "main": "./lib/svgpath.js",
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "ansi": "*",
    "benchmark": "*",
    "coveralls": "~2.11.2",
    "eslint": "0.19.0",
    "eslint-plugin-nodeca": "~1.0.3",
    "istanbul": "*",
    "mocha": "*"
  },
  "readme": "svgpath\n=======\n\n[![Build Status](https://img.shields.io/travis/fontello/svgpath/master.svg?style=flat)](https://travis-ci.org/fontello/svgpath)\n[![NPM version](https://img.shields.io/npm/v/svgpath.svg?style=flat)](https://www.npmjs.org/package/svgpath)\n[![Coverage Status](https://img.shields.io/coveralls/fontello/svgpath/master.svg?style=flat)](https://coveralls.io/r/fontello/svgpath?branch=master)\n\n\nLow level toolkit for svg paths transformations. Sometime you can't use\n`transform` attributes and have to apply changes to svg paths directly.\nThen this package is for you :) !\n\nNote, this package works with `paths`, not with svg xml sources.\n\n\nInstall\n-------\n\n```bash\nnpm install svgpath\n```\n\n\nExample\n-------\n\n```js\nvar svgpath = require('svgpath');\n\nvar transformed = svgpath(__your_path__)\n                    .scale(0.5)\n                    .translate(100,200)\n                    .rel()\n                    .round(1)\n                    .toString();\n```\n\n\nAPI\n---\n\nAll methods are chainable (return self).\n\n\n### new SvgPath(path) -> self\n\nConstructor. Creates new `SvgPath` class instance with chainable methods.\n`new` can be omited.\n\n\n### .abs() -> self\n\nConverts all path commands to absolute.\n\n\n### .rel() -> self\n\nConverts all path commands to relative. Useful to reduce output size.\n\n\n### .scale(sx [, sy]) -> self\n\nRescale path (the same as SVG `scale` transformation). `sy` = `sx` by default.\n\n\n### .translate(x [, y]) -> self\n\nRescale path (the same as SVG `translate` transformation). `y` = 0 by default.\n\n\n### .rotate(angle [, rx, ry]) -> self\n\nRotate path to `angle` degree around (rx, ry) point. If rotation center not set,\n(0, 0) used. The same as SVG `rotate` transformation.\n\n\n### .matrix([ m1, m2, m3, m4, m5, m6 ]) -> self\n\nApply 2x3 affine transform matrix to path. Params - array. The same as SVG\n`matrix` transformation.\n\n\n### .transform(string) -> self\n\nAny SVG transform or their combination. For example `rotate(90) scale(2,3)`.\nThe same format, as described in SVG standard for `transform` attribute.\n\n\n### .unshort() -> self\n\nConverts smooth curves `T`/`t`/`S`/`s` with \"missed\" control point to\ngeneric curves (`Q`/`q`/`C`/`c`).\n\n\n### .unarc() -> self\n\nReplaces all arcs with bezier curves.\n\n\n### .toString() -> string\n\nReturns final path string.\n\n\n### .round(precision) -> self\n\nRound all coordinates to given decimal precision. By default round to integer.\nUseful to reduce resulting output string size.\n\n\n### .iterate(function(segment, index, x, y) [, keepLazyStack]) -> self\n\nApply iterator to all path segments.\n\n- Each iterator receives `segment`, `index`, `x` and `y` params.\n  Where (x, y) - absolute coordinates of segment start point.\n- Iterator can modify current segment directly (return nothing in this case).\n- Iterator can return array of new segments to replace current one (`[]` means\n  that current segment should be delated).\n\nIf second param `keepLazyStack` set to `true`, then iterator will not evaluate\nstacked transforms prior to run. That can be useful to optimize calculations.\n\n\nAuthors\n-------\n\n- Sergey Batishchev - [@snb2013](https://github.com/snb2013)\n- Vitaly Puzrin - [@puzrin](https://github.com/puzrin)\n- Alex Kocharin - [@rlidwka](https://github.com/rlidwka)\n\n\nLicense\n-------\n\n[MIT](https://github.com/fontello/svgpath/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fontello/svgpath/issues"
  },
  "homepage": "https://github.com/fontello/svgpath",
  "_id": "svgpath@2.0.0",
  "_from": "svgpath@^2.0.0"
}
